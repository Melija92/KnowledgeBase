
@{
    ViewBag.Title = "WorkingwithAzureStorageinWebApplication";
}

<h2>Working with Azure Storage in Web Application</h2>

<div id="metadata" cmpgrp="page info">
    <a href="https://github.com/guntidheerajkumar" class="avatar" title="Dheeraj Kumar Gunti">
        <span class="author-name" style="background-image: url(https://github.com/guntidheerajkumar.png)" alt="Author Name"></span>
    </a>
    <div class="info">
        <span class="name"><a href="https://github.com/guntidheerajkumar">Dheeraj Kumar Gunti</a></span>
        <div class="meta">
            <p>Reading Time : <span class="eta"></span> (<span class="words"></span> words)</p>
        </div>
    </div>
</div>
<article>
    <p>Hi All, Welcome back to Knowledge Base.</p>
    <p>Azure Storage is the cloud storage solution for modern applications that rely on durability, availability, and scalability to meet the needs of their customers. Cloud computing enables new scenarios for applications requiring scalable, durable, and highly available storage for their data.</p>

    <p>Azure storage provides four services: Blob storage, Table storage, Queue storage, and File storage.</p>
    <ul>
        <li> <b>Blob Storage</b>, which stores unstructured object data. A blob can be any type of text or binary data, such as a document, media file, or application installer. Blob storage is also referred to as Object storage.</li>
        <li> <b>Table Storage</b>, which stores structured datasets. Table storage is a NoSQL key-attribute data store, which allows for rapid development and fast access to large quantities of data.</li>
        <li> <b>Queue Storage</b> provides reliable messaging for workflow processing and for communication between components of cloud services.</li>
        <li> <b>File Storage</b> offers shared storage for legacy applications.</li>
    </ul>
    <p>Today we will see how to create a Azure Storage and creating a small application which stores data in the storage. Lets get started.</p>
    <p>Open <a href="http://manage.windowsazure.com" target="_blank">http://manage.windowsazure.com</a></p>
    <p>Click on the New button.</p>
    <img src="~/Images/AzureStorage/AzureStorage_1.PNG" class="img-responsive" />
    <br />
    <p>Choose the below flow and specify the name for the storage. <b>Note:</b> Storage name should be in small letters. Choose the Location and Click on Create Storage Account. </p>
    <br />
    <img src="~/Images/AzureStorage/AzureStorage_2.PNG" class="img-responsive" />
    <br />
    <p>Once the storage account is created as below. Click on the storage account name and it will navigate to account details.</p>
    <br />
    <img src="~/Images/AzureStorage/AzureStorage_3.PNG" class="img-responsive" />
    <br />
    <p>The default page is Dashboard where we can see the statistics of the blobs, tables etc. We can see even the endpoints of all the services under Storage account.</p>
    <br />
    <img src="~/Images/AzureStorage/AzureStorage_4.PNG" class="img-responsive" />
    <br />
    <p>Click on Containers and you can able to see no containers. Click on Create Container. We can create a container from code or directly from here. It depends on the process which we choose.</p>
    <br />
    <img src="~/Images/AzureStorage/AzureStorage_5.PNG" class="img-responsive" />
    <br />
    <p>On clicking on the Create Container, we can able to see a window which takes Container name and access scope (Private, Public Container, Public Blob). Choose Public Container and specify a container name and click on create. <b>Note:</b> Container name should be in small letters. </p>
    <br />
    <img src="~/Images/AzureStorage/AzureStorage_6.PNG" class="img-responsive" />
    <br />
    <br />
    <p>Once the creation in done. We will start creating a web application. In this sample I have chosen ASP.NET Core Application with .NET Framework. We can choose any template based on the requirement.</p>
    <p>Once the project is created. We need to include <b>WindowsAzure.Storage</b> from Nuget Packages. Once the package is included, open HomeController and have some declarations as below.</p>
    <script src="https://gist.github.com/guntidheerajkumar/53373a227ea7ac0a7262c4f0b01a93de.js"></script>
    <p>
        To resolve issue with respect to the new classes we are using, Include the below namespaces. <br />
        <b>
            using Microsoft.WindowsAzure.Storage;<br />
            using Microsoft.WindowsAzure.Storage.Blob;<br />
            using Microsoft.WindowsAzure.Storage.Auth;<br />
        </b>.
    </p>
    <p>Specify the account name and primary key from the Container created. Choose Manage Keys in the bottom of the page in the portal. </p>
    <script src="https://gist.github.com/guntidheerajkumar/38317af7bfcedf39707a31fc5bb8cae6.js"></script>
    <p>Following is the code to get the name of the container and the list of blobs under that container.</p>
    <script src="https://gist.github.com/guntidheerajkumar/a129bb9e605d9906a775391e9c32274a.js"></script>
    <p>For showing container and blobs and creating a blob, we will have a sample UI as below.</p>
    <script src="https://gist.github.com/guntidheerajkumar/13affda39cf8fa3dc8c93c6344379c71.js"></script>
    <p>Have a UploadFiles Action Method in the controller which performs getting file from the input and uploading it to the storage.</p>
    <script src="https://gist.github.com/guntidheerajkumar/c4c842f51fa7fbb4a42336af2208e9e6.js"></script>
    <p>Run the application and upload files to the storage.</p>
    <br />
    <a href="https://github.com/guntidheerajkumar/SampleAzureBlob/archive/master.zip" target="_blank">Sample Application</a>
    <br />
    <br />
    <p>Happy Coding.... </p>
</article>